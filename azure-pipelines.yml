trigger:
- azure-pipelines-build
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  tag: '$(Build.BuildId)'

jobs:
- job: DockerHubPush
  steps:
  - task: Docker@2
    displayName: DockerHub Build and Push
    inputs:
      containerRegistry: 'DockerHub'
      repository: 'mancha24/reactivities'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: '$(tag)'

# - job: ACRPush
#   steps:
#   - task: Docker@2
#     displayName: ACR Build and Push
#     inputs:
#       containerRegistry: 'ACR'
#       repository: 'titaniumacr/reactivities'
#       command: 'buildAndPush'
#       Dockerfile: '**/Dockerfile'
#       tags: '$(tag)'

- job: PublishArtifact
  steps:
  - task: UseDotNet@2
    displayName: NET Core Version
    inputs:
      version: '7.x'
      performMultiLevelLookup: true
      includePreviewVersions: true
  - task: DotNetCoreCLI@2
    displayName: Dotnet Restore
    inputs:
      command: restore
      feedsToUse: select
      #vstsFeed: 'my-vsts-feed' # A series of numbers and letters
  - task: DotNetCoreCLI@2
    displayName: Dotnet Build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration release'
  - task: DotNetCoreCLI@2
    displayName: Dotnet Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration release --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: True
  #- bash: ls -R $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'